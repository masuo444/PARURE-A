# FOMUS PARURE - Complete Nginx Security Configuration
# Place this in your nginx server block

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name fomus-parure.com www.fomus-parure.com;
    
    # SSL Configuration
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Document root
    root /var/www/fomus-parure;
    index index-ja.html index-en.html language-select.html;
    
    # Security Headers
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://js.stripe.com https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://fonts.gstatic.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://api.stripe.com https://checkout.stripe.com https://fonts.googleapis.com; frame-src https://js.stripe.com https://hooks.stripe.com; object-src 'none'; base-uri 'self'; form-action 'self' https://checkout.stripe.com; upgrade-insecure-requests;" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), fullscreen=(), payment=('self' https://js.stripe.com)" always;
    
    # Remove server tokens
    server_tokens off;
    more_clear_headers Server;
    more_clear_headers X-Powered-By;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    
    # Apply rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Security locations
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    location = /sitemap.xml {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(bak|backup|old|orig|save|tmp|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~ /(wp-admin|wp-login|administrator|phpmyadmin|mysql|myadmin) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # JavaScript and CSS files
    location ~* \.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        
        # Security check for JS files
        location ~* \.js$ {
            add_header Content-Type "application/javascript; charset=utf-8" always;
        }
    }
    
    # Image files
    location ~* \.(png|jpg|jpeg|gif|svg|webp|ico)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # HTML files - no cache for security
    location ~* \.(html|htm)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        
        # Language detection
        location = / {
            try_files /language-select.html =404;
        }
        
        # Default language fallback
        location = /index.html {
            return 301 /language-select.html;
        }
    }
    
    # API endpoints (if any)
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        # Additional API security
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$ ) {
            return 405;
        }
        
        # CORS headers (adjust as needed)
        add_header Access-Control-Allow-Origin "https://fomus-parure.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # Form submissions
    location /contact {
        limit_req zone=login burst=5 nodelay;
        
        if ($request_method = POST) {
            # Additional form validation can be added here
        }
    }
    
    # Error pages
    error_page 400 /error/400.html;
    error_page 403 /error/403.html;
    error_page 404 /error/404.html;
    error_page 500 502 503 504 /error/50x.html;
    
    # Security logging
    access_log /var/log/nginx/fomus-parure-access.log combined;
    error_log /var/log/nginx/fomus-parure-error.log warn;
    
    # Security monitoring
    location /security-monitor {
        deny all;
        access_log /var/log/nginx/fomus-parure-security.log combined;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name fomus-parure.com www.fomus-parure.com;
    return 301 https://$server_name$request_uri;
}

# Rate limiting configuration (place in http block)
# http {
#     # Rate limiting zones
#     limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
#     limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
#     limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
#     
#     # Connection limiting
#     limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
#     limit_conn conn_limit_per_ip 20;
#     
#     # Request size limiting
#     client_max_body_size 10M;
#     client_body_buffer_size 128k;
#     client_header_buffer_size 1k;
#     large_client_header_buffers 4 4k;
#     
#     # Timeout settings
#     client_body_timeout 12;
#     client_header_timeout 12;
#     keepalive_timeout 15;
#     send_timeout 10;
# }